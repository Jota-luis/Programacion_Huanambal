---
title: "Como usar quarto"
author: "Jose Huanambal Galvez"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    output-file: index
---

# Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this 

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).


# Como usar cuarto?

## fuentes

- Negrita::**esto es fuente negrita**
- Cursiva:: _solanum tuberosum_

## formulas matematicas

Este es area de una circunferencia $rea_{Circunferencia}=pi\cdot r^2$

Esta es una formula cualquiera $$\frac{\left(2x-1\right)^2-1}{4}=k$$


# Mi primera pagina web
1. Tener proyecto
1. Conectar mi propyecto a github
1. tener un archivo en formato html llamado ´index.html´
1. Activar github pages

# Modelos lineales mixtos 

## Importar datos

```{r}
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"

gs <- url %>% 
  as_sheets_id()

fb <- gs %>% 
  range_read("fb")


str(fb)
```

## Modelo lineal 

```{r}
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
              ,data = fb)
anova(modelo)

plot(modelo)
```

### boxplot

```{r}
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
  labs(title = "Boxplot con interacción de niveles de riego y genotipo",
       x = "Interacción Riego y Genotipo",
       y = "Area Folicar (cm^2)")
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas del eje X

```

## Modelo lineal: hi

```{r}
modelo <- aov(formula = hi ~ bloque + riego + geno + riego*geno
              ,data = fb)
anova(modelo)

plot(modelo)

```

### boxplot

```{r}
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
  geom_boxplot(outlier.colour = "red" , outlier.shape = 16, outlier.size = 2) +
  labs(title = "boxplot con interacción de niveles de riego y genotipo" , 
       x = "Interacción Riego y Genotipo",
       y = "Valor de la variable respuesta") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  #Inclinar etiquetas del eje x
```


## Modelo lineal mixto: lfa


```{r}
library(lme4)
library(lmerTest)

model <- lme4::lmer(lfa ~ riego + geno + riego*geno + (1|bloque), data = fb)

anova(model)

plot(modelo)


ol <- boxplot(lfa ~ riego*geno, fb)
ol

```


```{r}
library(inti)

model <- remove_outliers(data = fb
                         ,formula = lfa ~ riego + geno + riego*geno + (1|bloque)
              ,plot_diag = T
            
              )
modelo
```



# Agricolae: Comparacion de medias

```{r}
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
              ,data = fb)
anova(modelo)

library(agricolae)

tukey_result <- HSD.test(modelo
                         , c("geno" , "riego")
                         , group = TRUE)
print(tukey_result)


plot(tukey_result)

str(tukey_result)

tukey_result

library(tidyverse)

grupos <- tukey_result$groups %>% 
  rownames_to_column("tratamientos") %>% 
  separate(tratamientos, into = c("geno" , "riego")
           , sep = ":")
str(grupos)
```

```{r}
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = "dodge", color = "black") +
  labs(x = "Genotipo", y = "LFA", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Gráfico de barras: LFA por genotipo y riego")
```

```{r}
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  geom_text(aes(label = groups),  # Mostrar 'groups' como etiqueta
            position = position_dodge(width = 0.9), 
            vjust = -0.3) +  # Ajusta la posición vertical de las etiquetas
  labs(title = "Efecto de Geno y Riego en LFA",
       x = "Genotipo",
       y = "LFA") +
  theme_minimal() +
  scale_fill_discrete(name = "Riego") +
  theme(axis.text.x = element_text(angle =45,hjust=1))
```


# emmeans: comparacion de medias

```{r}
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)

modelo <- lme4::lmer(hi ~ (1|bloque) + geno*riego
                     , data = fb)

anova(modelo)

cm1 <- emmeans(modelo, ~ geno | riego) %>% 
  cld(Letters = letters, reversed = T)

cm1

cm2 <- emmeans(modelo, ~ riego | geno) %>% 
  cld(Letters = letters, reversed = T)
cm2

cm3 <- emmeans(modelo, ~ riego * geno) %>% 
  cld(Letters = letters, reversed = T)
cm3

```

#Grafico

```{r}
library(ggplot2)
dtcm <- as.data.frame(cm1) %>% 
  rename(sig = ".group")

ggplot(dtcm, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = "dodge", color =
             "black") +
  geom_text(aes(label = sig, y = emmean),
            position = position_dodge(width = 0.9),
            vjust = 0) +
  labs(x = "Genotipo", y = "HI", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Gráfico de barras: LFA por genotipo y riego")
```


# Analisis multivariado

```{r}
str(fb)
```



# Correlacion 

```{r}
library(tidyverse)
library(psych)

fb %>% 
  select_if(is.numeric) %>% 
  dplyr::select(!c("block")) %>% 
  pairs.panels(x = .
               , hist.col="red"
               , pch = 21
               , stars = TRUE
               , scale = FALSE
               , lm = TRUE
               ) 
```


## PCA: Analisis de componentes principales 

```{r}
library(FactoMineR)

mv <- fb %>% 
  group_by(riego, geno) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>% 
  PCA(scale.unit = T, quali.sup = c(1:4), graph = F)


p1 <- plot(mv
     , choix="ind"
     , habillage=1
     , label = "ind"
     )


p2 <- plot(mv
     , choix="var")

list(p1, p2) %>% 
  plot_grid(plotlist = ., nrow = 1)
```


# Grafica en ggplot2

## Graficos en data cruda

### Box plot 


```{r}
fb %>% 
  ggplot(data = ., aes(x = geno, y = hi, fill = riego)) +
   geom_boxplot() +
  labs(x = "Genotipos"
       , y = "Indice de cosecha"
       , fill = "Tratamiento" 
       , title ="Eficiencia de uso de agua en papa"
       , subtitle = "Indice de cosecha"
       , caption = "n = 150", 
       ) +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5))

```

## Diagrama de dispersion 

```{r}
fb %>% 
  ggplot(data = .
         , aes(x = twue, y = hi, color = riego)) +
  geom_point() +
  geom_smooth(method = lm) +
    labs(x = "Efiencia de uso de agua de tuberculo"
       , y = "Indice de cosecha"
       , color = "Tratamiento" 
       , title ="Eficiencia de uso de agua en papa"
       , subtitle = "Indice de cosecha vs Efiencia de uso de agua de tuberculo"
       , caption = "n = 150", 
       ) +
  theme_bw()
  
```


## Datos resumiedos

```{r}
modelo <- lm(lfa ~  bloque + riego*geno
          , data = fb)

anova(modelo)

library(agricolae)

tukey <- HSD.test(modelo
                  , c("geno", "riego")
                  , group = TRUE)

grupos <- tukey_result$groups %>% 
  rownames_to_column("tratamientos") %>% 
  separate(tratamientos, into = c("geno", "riego")
           , sep = ":")
```

```{r}
grupos %>% 
  ggplot(data = .
         , aes(x = geno, y = lfa, fill = riego)) +
  geom_col(position = position_dodge2(preserve = "single"))
```



























































